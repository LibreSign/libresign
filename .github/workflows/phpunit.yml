name: PHPUnit

on:
  pull_request:
    paths:
      - '.github/workflows/**'
      - 'appinfo/**'
      - 'lib/**'
      - 'templates/**'
      - 'tests/**'
      - 'vendor/**'
      - 'vendor-bin/**'
      - '.php-cs-fixer.dist.php'
      - 'composer.json'
      - 'composer.lock'

  push:
    branches:
      - main
      - master
      - stable*

env:
  APP_NAME: libresign

jobs:
  phpunit:
    runs-on: ubuntu-latest
    strategy:
      # do not stop on another job's failure
      fail-fast: false
      matrix:
        php-versions: ['8.0', '8.1', '8.2']
        databases: ['sqlite']
        coverage: ['xdebug']
        testsuite: [unit, api]
        xdebug_mode: ['debug']
        server-versions: ['stable28']
        include:
          - php-versions: '8.0'
            databases: sqlite
            coverage: xdebug
            testsuite: default
            xdebug_mode: debug
            server-versions: stable28
    name: php${{ matrix.php-versions }}-${{ matrix.databases }}-${{ matrix.server-versions }}-${{ matrix.testsuite }}

    steps:
      - name: Checkout server
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}

      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1

      - name: Checkout app
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Checkout site
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          repository: libresign/libresign.github.io
          path: 'apps/${{ env.APP_NAME }}/build/site'

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: ${{ matrix.coverage }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_sqlite

      - name: Set up PHP dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i
      - name: Prevent Nextcloud OCP outdated
        working-directory: apps/${{ env.APP_NAME }}
        run: make updateocp

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          ./occ maintenance:install \
            --verbose \
            --database=${{ matrix.databases }} \
            --database-name=nextcloud \
            --database-host=127.0.0.1 \
            --database-port=$DB_PORT \
            --database-user=root \
            --database-pass=rootpassword \
            --admin-user=admin \
            --admin-pass=password
      - name: Enable app
        run: |
          ./occ app:enable ${{ env.APP_NAME }}
      - name: Start built in server
        run: |
          php -S localhost:8080 &
      - name: Set up dependencies apps
        run: |
          ./occ app:install --force --keep-disabled twofactor_gateway
          ./occ app:enable --force twofactor_gateway
      - name: PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        env:
          XDEBUG_MODE: ${{ matrix.xdebug_mode }}
        run: ./vendor/bin/phpunit -c phpunit.xml --testsuite ${{ matrix.testsuite }}
  upload-coverage:
    needs: phpunit
    runs-on: ubuntu-latest
    steps:
      - name: Upload coverage results to Coveralls
        working-directory: apps/${{ env.APP_NAME }}
        if: matrix.xdebug_mode == 'coverage'
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COVERALLS_PARALLEL: true
          COVERALLS_FLAG_NAME: php-${{ matrix.php-versions }}
        run: vendor/bin/php-coveralls --coverage_clover=build/logs/clover.xml --json_path=build/logs/coveralls-upload.json -v
  finish-coverage:
    needs: upload-coverage
    runs-on: ubuntu-latest
    steps:
      - name: Let Coveralls know that all tests have finished
        uses: coverallsapp/github-action@v2.0.0
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          parallel-finished: true
